{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrateur\\\\Desktop\\\\Photos-Gallery\\\\client\\\\src\\\\components\\\\Collection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getImages } from '../api';\nimport { useTransition, animated } from 'react-spring';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Collection = () => {\n  _s();\n\n  const [imageList, setImageList] = useState([]);\n  const [nextCursor, setNextCursor] = useState(null);\n  const [filterValue, setFilterValue] = useState('');\n  const [index, setIndex] = useState('');\n  const checkboxsFilter = [{\n    id: 0,\n    label: \"Objets\"\n  }, {\n    id: 1,\n    label: \"Mariages\"\n  }, {\n    id: 2,\n    label: \"Portrait\"\n  }, {\n    id: 3,\n    label: \"Paysages\"\n  }];\n  const transitions = useTransition(index, {\n    key: index,\n    from: {\n      opacity: 0,\n      transform: 'scale(1.1)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'scale(1)'\n    },\n    leave: {\n      opacity: 0,\n      transform: 'scale(0.9)'\n    },\n    config: {\n      duration: 2000\n    }\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const responseJson = await getImages();\n      setImageList(responseJson.resources);\n      setNextCursor(responseJson.next_cursor);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleLoadMoreButtonClick = async () => {\n    const responseJson = await getImages(nextCursor);\n    setImageList(currentImageList => [...currentImageList, ...responseJson.resources]);\n    setNextCursor(responseJson.next_cursor);\n  }; // const handleFilterImages = async () => {\n  //     const responseJson = await filteredImages(filterValue, nextCursor);\n  //     setImageList(responseJson.resources);\n  //     setNextCursor(responseJson.next_cursor)   \n  // }\n\n\n  console.log(imageList);\n  return transitions(props => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collection\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: checkboxsFilter.map(checkbox => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: checkbox.label,\n            id: checkbox.label,\n            checked: checkbox !== '' && checkbox.label === filterValue,\n            onClick: e => {\n              if (filterValue === '' || checkbox.label !== filterValue) {\n                setFilterValue(e.target.value);\n                e.target.checked = true;\n              } else {\n                setFilterValue('');\n                e.target.checked = false;\n              } // handleFilterImages()\n\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: checkbox.label,\n            children: checkbox.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, checkbox.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: imageList.filter(image => image.public_id.includes(filterValue)).map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-container\",\n          children: /*#__PURE__*/_jsxDEV(animated.div, {\n            style: { ...cardStyle\n            },\n            className: \"animated-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.url,\n              alt: image.public_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, image.asset_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), nextCursor && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLoadMoreButtonClick,\n        children: \"Voir plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this));\n};\n\n_s(Collection, \"1AwjWnwoHkSom2/F8Z32VC7ek6c=\", false, function () {\n  return [useTransition];\n});\n\n_c = Collection;\nexport default Collection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Collection\");","map":{"version":3,"sources":["C:/Users/Administrateur/Desktop/Photos-Gallery/client/src/components/Collection.js"],"names":["React","useEffect","useState","getImages","useTransition","animated","Collection","imageList","setImageList","nextCursor","setNextCursor","filterValue","setFilterValue","index","setIndex","checkboxsFilter","id","label","transitions","key","from","opacity","transform","enter","leave","config","duration","fetchData","responseJson","resources","next_cursor","handleLoadMoreButtonClick","currentImageList","console","log","props","map","checkbox","e","target","value","checked","filter","image","public_id","includes","cardStyle","url","asset_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getImages } from '../api';\r\nimport { useTransition, animated } from 'react-spring';\r\n\r\nconst Collection = () => {\r\n    const [imageList, setImageList] = useState([]);\r\n    const [nextCursor, setNextCursor] = useState(null);\r\n    const [filterValue, setFilterValue] = useState('');\r\n    const [index, setIndex] = useState('')\r\n    const checkboxsFilter = [\r\n        {id: 0, label: \"Objets\"},\r\n        {id: 1, label: \"Mariages\"},\r\n        {id: 2, label: \"Portrait\"}, \r\n        {id: 3, label: \"Paysages\"}];\r\n\r\n        const transitions = useTransition(index,{\r\n            key: index,\r\n            from: { opacity: 0, transform: 'scale(1.1)'},\r\n            enter: { opacity: 1, transform: 'scale(1)'},\r\n            leave: { opacity: 0, transform: 'scale(0.9)'},\r\n            config: {duration : 2000},\r\n        })\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const responseJson = await getImages();\r\n            setImageList(responseJson.resources);\r\n            setNextCursor(responseJson.next_cursor)\r\n        }\r\n        fetchData();   \r\n    }, [])\r\n\r\n    const handleLoadMoreButtonClick= async () => {\r\n        const responseJson = await getImages(nextCursor);\r\n        setImageList((currentImageList) => [\r\n            ...currentImageList, \r\n            ...responseJson.resources\r\n        ]);\r\n        setNextCursor(responseJson.next_cursor)\r\n    };\r\n    // const handleFilterImages = async () => {\r\n    //     const responseJson = await filteredImages(filterValue, nextCursor);\r\n    //     setImageList(responseJson.resources);\r\n    //     setNextCursor(responseJson.next_cursor)   \r\n    // }\r\n    console.log(imageList)\r\n    return transitions( (props) => (\r\n        <div className=\"collection\">\r\n            <div className=\"filter\">\r\n                {checkboxsFilter.map((checkbox) => {\r\n                    return (\r\n                        <li key={checkbox.id}>\r\n                            <input \r\n                                type=\"radio\"\r\n                                value={checkbox.label} \r\n                                id={checkbox.label}\r\n                                checked={checkbox !== '' && checkbox.label === filterValue}\r\n                                onClick={(e) => {\r\n                                    if(filterValue === '' || checkbox.label !== filterValue) {\r\n                                        setFilterValue(e.target.value);\r\n                                        e.target.checked =true\r\n                                    } else {\r\n                                        setFilterValue('');\r\n                                        e.target.checked = false\r\n                                    }\r\n                                \r\n                                    // handleFilterImages()\r\n                                }}\r\n                            />\r\n                            <label htmlFor={checkbox.label}>{checkbox.label}</label>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"gallery\">\r\n                <div className='image-grid'>\r\n                    {imageList\r\n                    .filter((image) => image.public_id.includes(filterValue)) \r\n                    .map((image) => (\r\n                        <div className=\"img-container\" key={image.asset_id}>\r\n                            <animated.div style={{...cardStyle}} className=\"animated-container\">\r\n                                <img src={image.url} alt={image.public_id} ></img>\r\n                            </animated.div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {nextCursor && <button onClick={handleLoadMoreButtonClick}>Voir plus</button>}     \r\n            </div>\r\n        </div>\r\n    )\r\n    )};\r\n\r\nexport default Collection;"]},"metadata":{},"sourceType":"module"}